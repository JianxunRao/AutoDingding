import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'org.greenrobot.greendao'

android {
    compileSdkVersion 33

    defaultConfig {
        applicationId "com.trojx.autodd"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode 146
        versionName "1.4.6"
        flavorDimensions "versionCode"
    }

    signingConfigs {
        release {
            storeFile file('autodingding.jks')
            storePassword '123456789'
            keyAlias 'key0'
            keyPassword '123456789'
        }
        androidOrigin {
            keyAlias 'android'
            keyPassword 'rjx336617'
            storePassword 'rjx336617'
            storeFile file('../android_keys/android_platform.jks')
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.androidOrigin
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/NOTICE.md'
        exclude 'META-INF/LICENSE.md'
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    greendao {
        schemaVersion 1//数据库版本号
        targetGenDir 'src/main/java'//设置DaoMaster、DaoSession、Dao目录
        daoPackage "${defaultConfig.applicationId}.greendao"//设置DaoMaster、DaoSession、Dao包名
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    kotlin {
        experimental {
            coroutines 'enable'
        }
    }

    viewBinding {
        enabled true
    }

    applicationVariants.configureEach { variant ->
        variant.outputs.configureEach {
            outputFileName = "AUTO_" + getBuildDate() + "_" + defaultConfig.versionName + ".apk"
        }
    }
}

static def createRandomCode() {
    def alphabetsInLowerCase = "abcdefghijklmnopqrstuvwxyz"
    def randomString = ''
    for (int i = 0; i < 10; i++) {
        def randomIndex = (int) (Math.random() * alphabetsInLowerCase.length())
        randomString += alphabetsInLowerCase.charAt(randomIndex)
    }
    return randomString
}

static def getBuildDate() {
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMdd", Locale.CHINA)
    return dateFormat.format(System.currentTimeMillis())
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'com.github.AndroidCoderPeng:Kotlin-lite-lib:1.0.10'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'com.google.code.gson:gson:2.10.1'
    //异步响应式
    implementation 'io.reactivex.rxjava2:rxjava:2.2.19'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.squareup.okhttp:okhttp:2.4.0'
    //上拉加载下拉刷新
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0'
    //沉浸式状态栏
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'
    //数据库框架
    implementation 'org.greenrobot:greendao:3.3.0'
    //邮件
    implementation 'com.sun.mail:android-mail:1.6.6'
    implementation 'com.sun.mail:android-activation:1.6.6'
    //日期、时间选择器
    implementation 'com.github.gzu-liyujiang.AndroidPicker:WheelPicker:4.1.13'
    def vm_version = "2.5.1"
    //Kotlin协程
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${vm_version}"
    //MVVM+LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${vm_version}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${vm_version}"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    //返回值转换器
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.8.1'
    //okhttp3日志拦截器
    implementation 'com.squareup.okhttp3:logging-interceptor:4.6.0'
    //网络请求和接口封装
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    //官方Json解析库
    implementation 'com.google.code.gson:gson:2.10.1'
}
